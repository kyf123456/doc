 1. 什么场景下使用类对象的私有方法，如何调用类对象的私有方法？

     1.1  对于一个功能可能需要分成多个小功能时， 此时小功能就需要私有化方式，在类的内部调用（内部可以多次调用私有方法）， 私有方法的原则： 对内开放，外内封闭。

      1.2 在类对象的非私有方法中，通过self对象去调用。

2.  现有三个类A, B, C,  类之间的关系是B(A),  C(B), 如果现有C类对象cc，那么cc如何判断它是A或B类对象，如何判断C是A类的子类？如何判断cc对象是否存在’name’属性？

		isinstance(cc, A)
		isinstance(cc, B)
		isinstance(cc, (A, B) )

		hasattr(cc, ‘name’)   # 判断对象是否具有’name’的属性

3.  如何理解多继承和对象的多态性

		3.1 多继承
				从多个父类中继承它们的方法及相关属性， 在调用父类的方法时，
			   确保父类方法中使用的对象属性必须要存在， 确定后便可以通过子类对象来调用父类的方法。

				在子类的初始化函数__init__中，可以调用父类的初始化（构造函数）： super(),  父类名.

				调用父类的构造方法的目的是： 初始化父类方法中使用的对象属性。

         3.2  同一类型的不同子类，在子类中重写父类的函数或方法，在特定的方法中声明的对象类型是父类，在特定方法中以父类的标准来调用父类的方法，在使用时， 传入对象可以是子类的对象，此时在对象方法调用时，则由父类的方法转为子类重写的方法。 整个这个过程，称之为对象的多态性。

				多态性： 继承， 重写。

				Printer：,   DellPrinter(Printer),  HhPrinter(Printer)

				 def print_():



				def print_file(printer):
					“””
							printer 是 Printer类型的对象
					“””
					printer.print_()




