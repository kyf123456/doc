一、 回顾昨天的知识点

    1. github仓库的使用
		1） 在github创建空仓库
			 xxx.git
		2） 在本地
			git clone git@github.com:注册用户名/xxx.git  # 从远程复到本               地， 前提必须交换公钥
			cd xxx  ＃本地仓库
			echo “hi,git server” >> a.txt
			git add a.txt  # 向本地仓库增加文件
			git commit -m “本次提交的说明”  ＃ 如果没有配置 user.email和user.name,则需要 git config --global user.email/name “信息”

			git push origin master  # 将本地的提交的文件上传（推送）远程仓库
			＃ 在push 时，如果远程存在新的文件，必须先pull (更新或下拉)，如果存在冲突，pull会自动合并，并提示合并的文件（后续：修改、添加、提交、上传）

		3）. 第一次，在没有交换公钥时
			1） 先 http方式来clone
			2)  修改远程仓库的origin
						git remote rm origin  先去源
						git remote add orign git@github.com:注册的用户名/远程仓库
				或者
						修改 .git/config 文件 找到origin的url 进行修改。

   	2 mysql数据库操作
			1) 安装mysql
					sudo apt install mysql-server
			 2) 进入mysql环境							sudo mysql
					sudo mysql -uroot -p  ＃ 回车后输入口令
			3) 查看、创建、删除、打开数据库				查看 show databases;
				创建 create database  <name>;
				删除  drop database <name>;
				打开  use  database <name>;
			4) 查看、创建、删除 表 、查看表结构 (DDL 数据库描述语言)
				查看当前库下所有的表：  show tables;
				创建表 :
							 create table <表名>(<列名1> <类型(长度) > [约束], 列名2 … );
							 可用的列的类型：
											varchar 可变长度类型，使用时，必须指定长度
											int  整型，默认长度是11
											float 小数型， 除了长度之外，还可以指定小数位数
											date/timestamp 日期或日期时间类型
											text 多行文本类型
											enum 枚举类型，指定列值的范围
											json   json数据类型

				删除表:  drop table <表名>
				查看表结构： desc <表名>
		5）insert、update、 delete、select 表数据操作 （DML(数据库操纵语言)语句）
			插入数据：
				insert [into] 表名 [(列名1，列名…)]
				values (列值1，列值2...) [, (列值1， 列值2...)...]

			更新数据:
				update <表名> set <列名> = <列值> [,  列名2＝列值2]
				[where 条件]

				条件：  列名＝值  ，   列名>=值，  列名 in (值1，值2)

			删除数据：
				delete from <表名> [where 条件]

			查询数据：
					select * from <表名>  查询所有的数据
					select 列名1，列名2  from <表名> 查询指定列的所有数据

					select 列名1，列名2 from <表名>
					where 条件   ＃查询指定列和满足指定条件的数据
	   6) 自增主键
				primary key  主键约束，  即列值不能为空，同时整个表的此列值是唯一的。
				auto_increment  列值会自增，步长为1

		7）排序
				order by <列名> [ASC|DESC]

		8)  事务 - DCL 数据库控制语言
			 begin; 开启事务，如果之前已开启， 会自动提交事务
			 commit; 提交事务，从begin; 开始到 commit;之间的所有操作都提交
			 rollback; 回滚事务，回到begin;之前的操作。

		9） 日期相关的函数或变量
			  select now()
			  select current_date
			  select current_timestamp
		 10) 列的默认值
				<列名> 类型(长度)   [default <默认值>]

