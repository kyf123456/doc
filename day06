1. 函数的简单应用
	公共：
	 str, int,float,bool,bytes,list,set,tuple, dict,max,min,len,print,input

	特定类型的函数：
	Math :  pow(), sqrt().
	str:  find(), split(), replace()..
	random:  random()
	os:  listdir(),remove()
	os.path:  isfile() , isdir()

	函数本质就是将重复的代码封装在一块，当使用时可被重复地调用。

	定义函数的语法：
    def 函数名 (参数列表):
          功能语句
		   [return  表达式]   # 如果函数有返回值，则使用 return

    如：
		 def  sub(x, y):       # 定义时，函数的参数名称之为 形参
               return x + y    #返回两个数的和

		 s = sub(10, 20)  # s : 30 , 调用时，函数的参数称之为 实参

		注意： 编写规范，函数的前后应该空两行

     练习：
	    1.   定义函数，实现指定内容输入，函数的参数包含输出的提示和数值范围
			  输出的内容： “请输入 1 到 20 之间的数”，返回输入的数

		2.  输入一个任一数值，算出它的对数， 基数默认 math.e

		3.  指定3个数值，算出最小的值

	   Pycharm：
			alt + [insert] 或 [Ins]  + Fn

	  4.  输入一个数值，判断是否为5的倍数 ，如果是则返回，如果不是则继续输入。


     总结： 函数如果没有 return 语句，则返回一个None,
               函数中是否存在参数，都必须存在 小括号 ( )
				 函数中存在while循环时，如果在循环语句有 return 语句，则会中断循环
               函数名的命名， 跟变量名的命名规则是一样的


2.  函数的关键字参数
		调用函数时，可以使用函数的形参名来传值。
		如果使用形参名指定参数值，则所有参数必须统一， 除了带默认值的参数

3. 函数参数的默认值

      是在形参名后 设置默认值：def xx(ns=10)

      有默认值的参数，在调用时可以不用提供实参

4. 不定长度的参数
		*args  :   tuple 元组类型
		**kwargs:  dict 字典

		在函数的参数列表中，*args和**kwargs一般要放在普通的参数的后面，
		如果在前面的话，普通参数必须使用关键参数传值(参数名 = 参数值)。

5. 匿名函数
	函数名  = lambda 参数列表: 表达式,函数的返回值即是表达式值

	函数名(实参列表)

6. 偏函数－ functools.partial(现有的函数名， 关键参数赋值表达式) ，返回函数名
		表象： 偏函数即是现有函数的分身，区别是关键参数值不同。

7. 作用域
	  只针对模块、类，函数中的变量，这些变量一般只作用在如函数的局部。
	  如果想将局变提升为全局：
			global  局部变量名

8. Python的异常处理
	之前的代码经常会出现的异常：
		TypeError, KeyError，IndexError、 ValueError
		Exception

作业：
1. 定义函数，实现任一数值以内的所有4的倍数
2. 定义函数，实现添加学生信息功能
3. 定义函数，实现随机产生2个点的坐标信息
4. 定义函数，计算两个点的距离
5. 定义函数，输入浮点数，计算偏差在0.25以内的20个浮点数列

